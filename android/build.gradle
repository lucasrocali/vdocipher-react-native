import org.json.JSONObject
import java.nio.file.Files
import java.nio.file.Paths

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
    }
}

apply plugin: 'com.android.library'

// TODO read from package.json
// "releaseVersionName" must be the same as "version" in package.json
// "releaseVersionCode" must increment by 1 with every release
def releaseVersionName = "1.8.1"
def releaseVersionCode = 3

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30

        // Generate BuildConfig fields for library version info
        buildConfigField "int", "VDO_VERSION_CODE", "${releaseVersionCode}"
        buildConfigField "String", "VDO_VERSION_NAME", "\"${releaseVersionName}\""
    }
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task verifyVersionNameMatchesWithPackageJson {
    doLast {
        final String versionFromGradleConfig = releaseVersionName

        File f = project.file("../package.json")
        String packageJsonText = new String(
                Files.readAllBytes(Paths.get(f.toURI())),
                "UTF-8")
        JSONObject packageJsonData = new JSONObject(packageJsonText)

        final String versionFromPackageJson = packageJsonData.get("version")

        if (!versionFromGradleConfig.equals(versionFromPackageJson)) {
            throw new IllegalStateException(
                    "Version mismatch: version " + versionFromGradleConfig + " from build.gradle " +
                            "does not match the version " + versionFromPackageJson + " in package.json." +
                            "\nIn android/build.gradle, releaseVersionName must be " +
                            "updated to reflect the version in package.json whenever the package.json " +
                            "version is updated. Also, releaseVersionCode must be " +
                            "incremented by 1 with every release." +
                            "\nThis is to ensure the vdocipher " +
                            "native android sdk has correct vdocipher react-native sdk version at runtime for " +
                            "analytics and other purposes."
            )
        }
    }
}

afterEvaluate {
    assembleDebug.finalizedBy(verifyVersionNameMatchesWithPackageJson)
    assembleRelease.finalizedBy(verifyVersionNameMatchesWithPackageJson)
}

repositories {
    google()
    jcenter()
    mavenCentral()
    maven {
        url "https://github.com/VdoCipher/maven-repo/raw/master/repo"
    }
}

dependencies {
    compileOnly 'com.facebook.react:react-native:+'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.vdocipher.aegis:vdocipher-android:1.10.1'
}
